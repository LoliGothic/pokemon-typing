{"version":3,"sources":["reportWebVitals.ts","components/ButtonAppBar/index.tsx","components/BasicButton/index.tsx","public/images/happy.png","components/Media/index.tsx","components/Box/index.tsx","pages/App.tsx","pages/Game.tsx","utils/drawCanvas.ts","components/BasicButton2/index.tsx","pages/Play.tsx","components/Types/index.tsx","components/BoxComponent/index.tsx","components/OutlinedButtons/index.tsx","pages/Result.tsx","RouterConfig.tsx","hooks/useHash.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ButtonAppBar","AppBar","position","color","Helmet","property","content","rel","href","Toolbar","style","display","justifyContent","Stack","direction","spacing","Typography","BasicButtons","Button","component","size","variant","width","height","fontSize","MediaCard","Card","sx","flexDirection","alignItems","CardMedia","objectFit","image","happyicon","alt","CardContent","gutterBottom","BoxSx","Box","m","minHeight","p","border","Grid","container","columns","item","xs","App","useStyles","makeStyles","defaultFont","textAlign","inputBox","padding","marginBottom","top","greenFont","fontFamily","redFont","backgroundColor","greyFont","blackFont","stats","margin","rights","Game","classes","useState","typingString","setTypingString","currentIndex","setCurrentIndex","isMisstype","setIsMisstype","missCount","setMissCount","finished","setFinished","started","setStarted","count","setCount","time","setTime","pokemonData","setPokemonData","setError","useEffect","axios","get","res","console","log","data","results","randomInt","Math","floor","random","name","catch","err","message","length","pokemonName","Date","getTime","className","onKeyPress","e","key","handleKeyPress","tabIndex","slice","drawPoint","ctx","point","x","canvas","y","fillStyle","beginPath","arc","PI","fill","BasicButtons2","Play","webcamRef","useRef","canvasRef","resultsRef","datas","useControls","bgImage","landmark","min","max","step","value","result","button","OutputData","current","multiFaceLandmarks","trueCoordintes","scaledCoordinates","minX","maxX","minY","maxY","minZ","maxZ","i","z","left_eye_z_avg","FACEMESH_LEFT_EYE","right_eye_z_avg","FACEMESH_RIGHT_EYE","lips_z_avg","FACEMESH_LIPS","onResults","emphasis","save","clearRect","drawImage","tesselation","lineWidth","right_eye","left_eye","face_oval","landmarks","drawConnectors","FACEMESH_TESSELATION","FACEMESH_RIGHT_IRIS","FACEMESH_LEFT_IRIS","FACEMESH_FACE_OVAL","restore","draw","getContext","faceMesh","FaceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","camera","Camera","video","onFrame","a","send","start","close","styles","ref","visibility","audio","mirrored","screenshotFormat","videoConstraints","facingMode","css","Types","children","box","BoxComponent","number","borderRadius","fontWeight","OutlinedButtons","numbers","id","Result","myCanvas","React","myConfetti","confetti","create","resize","useWorker","window","setTimeout","cb","particleCount","spread","ticks","origin","RouterConfig","init","hash","setHash","location","addEventListener","removeEventListener","useHash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1fd939f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Stack from \"@mui/material/Stack\";\nimport FaceSharpIcon from \"@mui/icons-material/FaceSharp\";\nimport { Helmet } from \"react-helmet\";\nimport { Grid } from \"@mui/material\";\n\nconst ButtonAppBar = (): React.ReactElement => {\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <Helmet>\n        <title>Eye-Typing</title>\n        <meta property=\"ogel:image\" key=\"ogImage\" content=\"/emojis/happy.png\" />\n        <link rel=\"icon\" href=\"/emojis/happy.png\" />\n      </Helmet>\n      <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Stack direction=\"row\" spacing={1}>\n          <FaceSharpIcon />\n          <Typography>Eye-Typing</Typography>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default ButtonAppBar;\n","import * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nexport default function BasicButtons() {\n  return (\n    <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n      <Button\n        component=\"a\"\n        size=\"large\"\n        variant=\"contained\"\n        style={{ width: 200, height: 64, fontSize: 20 }}\n      >\n        Play\n      </Button>\n    </Stack>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/happy.a95dfaf0.png\";","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport happyicon from \"../../public/images/happy.png\";\n\nexport default function MediaCard() {\n  return (\n    <Card\n      component=\"a\"\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <CardMedia\n        component=\"img\"\n        width=\"auto\"\n        height=\"600px\"\n        style={{ objectFit: \"contain\" }}\n        image={happyicon}\n        alt=\"user icon\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          Username\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport Typography from \"@mui/material/Typography\";\nimport BasicButtons from \"../BasicButton\";\nimport BasicButtons2 from \"../BasicButton2\";\nimport Grid from \"@mui/material/Grid\";\nimport MediaCard from \"../Media\";\nimport Button from \"@mui/material/Button\";\n\nexport default function BoxSx() {\n  return (\n    <Box\n      m=\"40px auto\"\n      sx={{\n        width: \"90%\",\n        minHeight: 300,\n        p: 2,\n        border: \"1px solid blue\"\n      }}\n    >\n      <Grid container justifyContent=\"center\" alignItems=\"center\" columns={2}>\n        <Grid item xs={1}>\n          {/* ユーザーアイコン */}\n          {/* ユーザーName */}\n          <MediaCard />\n        </Grid>\n        <Grid item xs={1} justifyContent=\"center\" alignItems=\"center\">\n          {/* プレイボタン */}\n\n          <nav>\n            <ul>\n              <li>\n                <a href=\"#play\">\n                  <BasicButtons />\n                  {/* <Button variant=\"contained\">play</Button> */}\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonAppBar from \"../components/ButtonAppBar\";\nimport { Fragment } from \"react\";\nimport BoxSx from \"../components/Box\";\n\nexport const App: React.VFC = () => {\n  return (\n    <>\n      <ButtonAppBar />\n      <Fragment>\n        <BoxSx />\n      </Fragment>\n    </>\n  );\n};\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(() => ({\n  defaultFont: {\n    textAlign: \"center\",\n    fontSize: \"15px\"\n  },\n  inputBox: {\n    padding: \"30px\",\n    marginBottom: \"30px\",\n    textAlign: \"center\",\n    top: \"0\"\n  },\n  greenFont: {\n    color: \"#689f38\",\n    display: \"inline\",\n    fontFamily: \"Times New Roman\",\n    fontSize: \"50px\"\n  },\n  redFont: {\n    backgroundColor: \"#e0e0e0\",\n    color: \"red\",\n    display: \"inline\",\n    fontFamily: \"Times New Roman\",\n    fontSize: \"50px\"\n  },\n  greyFont: {\n    color: \"grey\",\n    display: \"inline\",\n    fontFamily: \"Times New Roman\",\n    fontSize: \"50px\"\n  },\n  blackFont: {\n    backgroundColor: \"#e0e0e0\",\n    display: \"inline\",\n    fontFamily: \"Times New Roman\",\n    fontSize: \"50px\"\n  },\n  stats: {\n    display: \"inline\",\n    fontSize: \"20px\",\n    margin: \"0 30px\",\n    textAlign: \"center\"\n  },\n  rights: {\n    fontSize: \"20px\",\n    padding: \"20px\"\n  }\n}));\n\n//pokeAPIで取ってくるデータの型を定義\ninterface Pokemon {\n  name: string;\n  url: string;\n}\n\nfunction Game() {\n  const classes = useStyles(); //styleの設定\n  const [typingString, setTypingString] = useState(\"\"); //pokeAPIから取ってきた英単語を入れる\n  const [currentIndex, setCurrentIndex] = useState(0); //英単語のどこの位置か\n  const [isMisstype, setIsMisstype] = useState(false);\n  const [missCount, setMissCount] = useState(0); //misstypeのカウント\n  const [finished, setFinished] = useState(false); //タイピングの終了\n  const [started, setStarted] = useState(false); //タイピングの開始\n  const [count, setCount] = useState(0); //10問カウント\n  const [time, setTime] = useState(0); //スコア計算に使うtime\n  const [pokemonData, setPokemonData] = useState<Pokemon[]>([]);\n  const [error, setError] = useState(\"\");\n\n  //pokeAPIからデータを持ってくる\n  useEffect(() => {\n    axios\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=151\")\n      .then((res) => {\n        console.log(res.data.results);\n        let randomInt = Math.floor(Math.random() * 151); //1~151までの乱数生成\n        setPokemonData(res.data.results); //ポケモンデータの初期値\n        setTypingString(res.data.results[randomInt].name); //英単語の初期値\n      })\n      .catch((err) => setError(err.message));\n  }, []);\n\n  //countが変わるたびに実行\n  useEffect(() => {\n    //10問終わったらelseに行く\n    if (pokemonData.length > 0) {\n      if (count < 10) {\n        let randomInt = Math.floor(Math.random() * 151); //1~151までの乱数生成\n        let pokemonInfo = pokemonData[randomInt]; //ランダムなpokeの情報\n        let pokemonName = pokemonInfo.name; //ランダムなpokeの名前\n        setTypingString(pokemonName); //pokeの名前をset\n        console.log(pokemonName); //pokeの名前が入っているか確認\n      } else {\n        setTypingString(\"\"); //解いた後は何も表示しない\n        setTime(new Date().getTime() - time); //解くのにかかった時間\n        setFinished(true); //タイピングゲーム終了\n      }\n    }\n  }, [count]);\n\n  const handleKeyPress = (e: any) => {\n    if (finished) return; //タイピングが終わったらkeyを押しても何も返さない\n\n    //タイピング開始時間\n    if (!started) {\n      setStarted(true);\n      setTime(new Date().getTime());\n    }\n\n    if (e.key === typingString[currentIndex]) {\n      setIsMisstype(false);\n      setCurrentIndex(currentIndex + 1);\n\n      //1問追わったらcountを増やすことで，次の問題に行く\n      if (currentIndex + 1 >= typingString.length) {\n        setCurrentIndex(0);\n        setCount(count + 1);\n        console.log(count);\n      }\n    } else {\n      //ミスタイプがあったらmissCountを1増やす\n      setIsMisstype(true);\n      setMissCount(missCount + 1);\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.defaultFont}>\n        下の英単語のどこかをクリックしたあとにスタートできます\n      </div>\n      <Box\n        onKeyPress={(e) => handleKeyPress(e)}\n        tabIndex={0}\n        className={classes.inputBox}\n      >\n        <Typography className={classes.greenFont}>\n          {typingString.slice(0, currentIndex)}\n        </Typography>\n        {isMisstype ? (\n          <Typography className={classes.redFont}>\n            {typingString[currentIndex]}\n          </Typography>\n        ) : (\n          <Typography className={classes.blackFont}>\n            {typingString[currentIndex]}\n          </Typography>\n        )}\n        <Typography className={classes.greyFont}>\n          {typingString.slice(currentIndex + 1, typingString.length)}\n        </Typography>\n      </Box>\n      <Box marginBottom=\"50px\" className={classes.stats}>\n        <Typography>missType: {missCount}</Typography>\n      </Box>\n    </div>\n  );\n}\n\nexport default Game;\n","import { drawConnectors } from \"@mediapipe/drawing_utils\";\nimport {\n  FACEMESH_FACE_OVAL,\n  FACEMESH_LEFT_EYE,\n  FACEMESH_LEFT_EYEBROW,\n  FACEMESH_LEFT_IRIS,\n  FACEMESH_LIPS,\n  FACEMESH_RIGHT_EYE,\n  FACEMESH_RIGHT_EYEBROW,\n  FACEMESH_RIGHT_IRIS,\n  FACEMESH_TESSELATION,\n  NormalizedLandmark,\n  Results\n} from \"@mediapipe/face_mesh\";\n\n/**\n * canvasに描画する\n * @param ctx コンテキスト\n * @param results 検出結果\n * @param bgImage capture imageを描画するか\n * @param emphasis 強調するlandmarkのindex\n */\nexport const draw = (\n  ctx: CanvasRenderingContext2D,\n  results: Results,\n  bgImage: boolean,\n  emphasis: number\n) => {\n  const width = ctx.canvas.width;\n  const height = ctx.canvas.height;\n\n  ctx.save();\n  ctx.clearRect(0, 0, width, height);\n\n  if (bgImage) ctx.drawImage(results.image, 0, 0, width, height);\n\n  if (results.multiFaceLandmarks) {\n    const lineWidth = 1;\n    const tesselation = { color: \"#C0C0C070\", lineWidth };\n    const right_eye = { color: \"#FF3030\", lineWidth };\n    const left_eye = { color: \"#30FF30\", lineWidth };\n    const face_oval = { color: \"#E0E0E0\", lineWidth };\n\n    for (const landmarks of results.multiFaceLandmarks) {\n      // 顔の表面（埋め尽くし）\n      drawConnectors(ctx, landmarks, FACEMESH_TESSELATION, tesselation);\n      // 右の目・眉・瞳\n      drawConnectors(ctx, landmarks, FACEMESH_RIGHT_EYE, right_eye);\n      // drawConnectors(ctx, landmarks, FACEMESH_RIGHT_EYEBROW, right_eye)\n      drawConnectors(ctx, landmarks, FACEMESH_RIGHT_IRIS, right_eye);\n      // 左の目・眉・瞳\n      drawConnectors(ctx, landmarks, FACEMESH_LEFT_EYE, left_eye);\n      // drawConnectors(ctx, landmarks, FACEMESH_LEFT_EYEBROW, left_eye)\n      drawConnectors(ctx, landmarks, FACEMESH_LEFT_IRIS, left_eye);\n      // 顔の輪郭\n      drawConnectors(ctx, landmarks, FACEMESH_FACE_OVAL, face_oval);\n      // 唇\n      drawConnectors(ctx, landmarks, FACEMESH_LIPS, face_oval);\n\n      // landmarkの強調描画\n      drawPoint(ctx, landmarks[emphasis]);\n    }\n  }\n  ctx.restore();\n};\n\n/**\n * 特定のlandmarkを強調する\n * @param ctx\n * @param point\n */\nconst drawPoint = (\n  ctx: CanvasRenderingContext2D,\n  point: NormalizedLandmark\n) => {\n  const x = ctx.canvas.width * point.x;\n  const y = ctx.canvas.height * point.y;\n  const r = 5;\n\n  ctx.fillStyle = \"#22a7f2\";\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, Math.PI * 2, true);\n  ctx.fill();\n};\n","import * as React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BasicButtons2() {\n  return (\n    <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n      <Button\n        component=\"a\"\n        size=\"large\"\n        variant=\"contained\"\n        style={{ width: 200, height: 64, fontSize: 20 }}\n      >\n        Result\n      </Button>\n    </Stack>\n  );\n}\n","import { button, useControls } from \"leva\";\nimport React, { FC, useCallback, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { css } from \"@emotion/css\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport {\n  FaceMesh,\n  FACEMESH_LEFT_EYE,\n  FACEMESH_LIPS,\n  FACEMESH_RIGHT_EYE,\n  Results\n} from \"@mediapipe/face_mesh\";\nimport { draw } from \"../utils/drawCanvas\";\nimport ButtonAppBar from \"../components/ButtonAppBar\";\nimport Game from \"./Game\";\nimport BasicButtons2 from \"../components/BasicButton2\";\n\nexport const Play: React.VFC = () => {\n  const webcamRef = useRef<Webcam>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const resultsRef = useRef<Results>();\n\n  // コントローラーの追加\n  const datas = useControls({\n    bgImage: true,\n    landmark: {\n      min: 0,\n      max: 477,\n      step: 1,\n      value: 0\n    },\n    result: button(() => {\n      OutputData();\n    })\n  });\n\n  /** 検出結果をconsoleに出力する */\n  const OutputData = () => {\n    if (!resultsRef.current) return;\n\n    const results = resultsRef.current!;\n    console.log(\"results\", results);\n\n    console.log(results.multiFaceLandmarks[0]);\n\n    const trueCoordintes = results.multiFaceLandmarks[0];\n    const scaledCoordinates: any = []; // length = 478\n    let minX = 10000;\n    let maxX = -10000;\n    let minY = 10000;\n    let maxY = -10000;\n    let minZ = 10000;\n    let maxZ = -10000;\n    for (let i = 0; i < trueCoordintes.length; i++) {\n      if (minX > trueCoordintes[i].x) {\n        minX = trueCoordintes[i].x;\n      }\n      if (maxX < trueCoordintes[i].x) {\n        maxX = trueCoordintes[i].x;\n      }\n      if (minY > trueCoordintes[i].y) {\n        minY = trueCoordintes[i].y;\n      }\n      if (maxY < trueCoordintes[i].y) {\n        maxY = trueCoordintes[i].y;\n      }\n      if (minZ > trueCoordintes[i].z) {\n        minZ = trueCoordintes[i].z;\n      }\n      if (maxZ < trueCoordintes[i].z) {\n        maxZ = trueCoordintes[i].z;\n      }\n    }\n    // console.log(\n    //   \"minX, maxX, minY, maxY, minZ, maxZ\",\n    //   minX,\n    //   maxX,\n    //   minY,\n    //   maxY,\n    //   minZ,\n    //   maxZ\n    // );\n    // console.log(\"scaledCoordinates\", scaledCoordinates);\n    for (let i = 0; i < trueCoordintes.length; i++) {\n      scaledCoordinates[i] = {\n        x: (trueCoordintes[i].x - minX) / (maxX - minX),\n        y: (trueCoordintes[i].y - minY) / (maxY - minY),\n        z: (trueCoordintes[i].z - minZ) / (maxZ - minZ)\n      };\n    }\n\n    let left_eye_x_avg = 0;\n    let left_eye_y_avg = 0;\n    let left_eye_z_avg = 0;\n    for (let i = 0; i < FACEMESH_LEFT_EYE.length; i++) {\n      left_eye_x_avg += scaledCoordinates[i].x;\n      left_eye_y_avg += scaledCoordinates[i].y;\n      left_eye_z_avg += scaledCoordinates[i].z;\n    }\n    left_eye_x_avg /= FACEMESH_LEFT_EYE.length;\n    left_eye_y_avg /= FACEMESH_LEFT_EYE.length;\n    left_eye_z_avg /= FACEMESH_LEFT_EYE.length;\n\n    let right_eye_x_avg = 0;\n    let right_eye_y_avg = 0;\n    let right_eye_z_avg = 0;\n    for (let i = 0; i < FACEMESH_RIGHT_EYE.length; i++) {\n      right_eye_x_avg += scaledCoordinates[i].x;\n      right_eye_y_avg += scaledCoordinates[i].y;\n      right_eye_z_avg += scaledCoordinates[i].z;\n    }\n    right_eye_x_avg /= FACEMESH_RIGHT_EYE.length;\n    right_eye_y_avg /= FACEMESH_RIGHT_EYE.length;\n    right_eye_z_avg /= FACEMESH_RIGHT_EYE.length;\n\n    let lips_x_avg = 0;\n    let lips_y_avg = 0;\n    let lips_z_avg = 0;\n    for (let i = 0; i < FACEMESH_LIPS.length; i++) {\n      lips_x_avg += scaledCoordinates[i].x;\n      lips_y_avg += scaledCoordinates[i].y;\n      lips_z_avg += scaledCoordinates[i].z;\n    }\n    lips_x_avg /= FACEMESH_LIPS.length;\n    lips_y_avg /= FACEMESH_LIPS.length;\n    lips_z_avg /= FACEMESH_LIPS.length;\n\n    // console.log(\"left_eye_avg\", {\n    //   x: left_eye_x_avg,\n    //   y: left_eye_y_avg,\n    //   z: left_eye_z_avg\n    // });\n    // console.log(\"right_eye_avg\", {\n    //   x: right_eye_x_avg,\n    //   y: right_eye_y_avg,\n    //   z: right_eye_z_avg\n    // });\n    // console.log(\"eye_avg\", {\n    //   x: (left_eye_x_avg + right_eye_x_avg) / 2,\n    //   y: (left_eye_y_avg + right_eye_y_avg) / 2,\n    //   z: (left_eye_z_avg + right_eye_z_avg) / 2\n    // });\n    // console.log(\"lips_avg\", {\n    //   x: lips_x_avg,\n    //   y: lips_y_avg,\n    //   z: lips_z_avg\n    // });\n    console.log(\n      \"lips_z_avg - (left_eye_z_avg + right_eye_z_avg) / 2\",\n      lips_z_avg - (left_eye_z_avg + right_eye_z_avg) / 2\n    );\n    if (lips_z_avg - (left_eye_z_avg + right_eye_z_avg) / 2 > 0.08) {\n      // 0.010061425867024808 => front\n      // 0.008909345257416134 => down\n      console.log(\"front\");\n    } else {\n      console.log(\"down\");\n    }\n    console.log(\"FACEMESH_LEFT_EYE\", FACEMESH_LEFT_EYE);\n    // console.log(\"FACEMESH_RIGHT_EYE\", FACEMESH_RIGHT_EYE);\n    // console.log(\"FACEMESH_LIPS\", FACEMESH_LIPS);\n    // window.location.hash = \"#result\";\n  };\n\n  /** 検出結果（フレーム毎に呼び出される） */\n  const onResults = (results: Results) => {\n    // 検出結果の格納\n    resultsRef.current = results;\n    // 描画処理\n    const ctx = canvasRef.current!.getContext(\"2d\")!;\n    draw(ctx, results, datas.bgImage, datas.landmark);\n    if (!resultsRef.current) {\n      OutputData();\n    }\n  };\n\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      }\n    });\n\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      refineLandmarks: true, // landmarks 468 -> 478\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n\n    faceMesh.onResults(onResults);\n\n    if (webcamRef.current) {\n      const camera = new Camera(webcamRef.current.video!, {\n        onFrame: async () => {\n          if (webcamRef.current && webcamRef.current.video)\n            await faceMesh.send({ image: webcamRef.current.video });\n        },\n        width: 1280,\n        height: 720\n      });\n      camera.start();\n    }\n\n    return () => {\n      faceMesh.close();\n    };\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {/* capture */}\n      <Game />\n      <Webcam\n        ref={webcamRef}\n        style={{ visibility: \"hidden\", display: \"hidden\" }}\n        audio={false}\n        width={1280}\n        height={720}\n        mirrored\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={{ width: 1280, height: 720, facingMode: \"user\" }}\n      />\n      {/* draw */}\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={1280}\n        height={720}\n      />\n      <a href=\"#result\">\n        <BasicButtons2 />\n      </a>\n    </div>\n  );\n};\n\n// ==============================================\n// styles\n\nconst styles = {\n  container: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  `,\n  canvas: css`\n    position: absolute;\n    width: 1280px;\n    height: 720px;\n    background-color: #1e1e1e;\n    border: 1px solid #fff;\n    margin-top: 32px;\n  `\n};\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst Types = ({ children }: React.ComponentPropsWithoutRef<\"div\">) => {\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Typography variant=\"h3\" component=\"div\" gutterBottom>\n        {children}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Types;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Types from \"../Types\";\n// import { createTheme } from '@material-ui/core/styles';\n\ntype Numbers = {\n  result: any;\n};\n\nconst BoxComponent = ({ result }: Numbers): React.ReactElement => {\n  const title = \"結果\";\n  function showTitle() {\n    console.log(\"title:\", result.number);\n    console.log(\"result:\", result);\n  }\n  showTitle();\n  return (\n    <Box\n      style={styles.box}\n      textAlign=\"center\"\n      alignItems=\"center\"\n      sx={{ p: 6, borderRadius: \"30px\", border: \"2px solid #2798EC\" }}\n    >\n      <Types>{title}</Types>\n\n      <Typography fontSize=\"h4.fontSize\" m={4}>\n        スコア\n      </Typography>\n\n      <Typography fontSize=\"h3.fontSize\" fontWeight=\"bold\">\n        {result[0].number}点\n      </Typography>\n\n      <Typography fontSize=\"h5.fontSize\" m={4}>\n        画面から目を離した数\n      </Typography>\n\n      <Typography fontSize=\"h4.fontSize\">{result[1].number}回</Typography>\n    </Box>\n  );\n};\n\nconst styles = {\n  box: {\n    width: \"45%\",\n    margin: \"50px auto 50px\"\n  }\n};\n\n// export async function getServerSideProps() {\n//   // 本来なら以下のように外部APIからデータフェッチ\n//   // const res = await fetch(`https://.../data`)\n//   // const data = await res.json()\n\n//   // 今はeventsデータを決めうち\n//   type EventItem = {\n//     id: number;\n//     title: string;\n//   };\n\n//   const events: EventItem[] = [\n//     { id: 1, title: \"title1\" },\n//     { id: 2, title: \"title2\" }\n//   ];\n\n//   return {\n//     props: {\n//       events: events\n//     }\n//   };\n// }\n\nexport default BoxComponent;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport StarsSharpIcon from \"@mui/icons-material/StarsSharp\";\nimport CottageSharpIcon from \"@mui/icons-material/CottageSharp\";\nimport PlayCircleSharpIcon from \"@mui/icons-material/PlayCircleSharp\";\nimport Typography from \"@mui/material/Typography\";\nimport PlayCircleFilledWhiteSharpIcon from \"@mui/icons-material/PlayCircleFilledWhiteSharp\";\n\nconst OutlinedButtons = (): React.ReactElement => {\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={8}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <a href=\"/\">\n        <Button component=\"a\" variant=\"outlined\">\n          <Stack direction=\"row\" spacing={1}>\n            <CottageSharpIcon />\n            <Typography>ホームに戻る</Typography>\n          </Stack>\n        </Button>\n      </a>\n\n      <a href=\"#play\">\n        <Button component=\"a\" variant=\"outlined\">\n          <Stack direction=\"row\" spacing={1}>\n            <PlayCircleFilledWhiteSharpIcon />\n            <Typography>もう一回</Typography>\n          </Stack>\n        </Button>\n      </a>\n\n      {/* <Button variant='outlined'>\n\t\t\t\t<Stack direction='row' spacing={1}>\n\t\t\t\t\t<StarsSharpIcon />\n\t\t\t\t\t<Typography>ランキング</Typography>\n\t\t\t\t</Stack>\n\t\t\t</Button> */}\n    </Stack>\n  );\n};\n\nexport default OutlinedButtons;\n","import * as React from \"react\";\nimport BoxComponent from \"../components/BoxComponent\";\nimport OutlinedButtons from \"../components/OutlinedButtons\";\nimport confetti from \"canvas-confetti\";\nimport { useRef } from \"react\";\nimport ButtonAppBar from \"../components/ButtonAppBar\";\n\n// 紙吹雪を出す回数\nconst CONFETTI_COUNT = 5;\n\ntype Number = {\n  id: string;\n  number: number;\n};\n\nconst numbers: Number[] = [\n  { id: \"score\", number: 80 },\n  { id: \"count\", number: 10 }\n];\n\nexport const Result: React.VFC = () => {\n  // canvasのDOMを取得する\n  const myCanvas = React.useRef<HTMLCanvasElement>(null);\n\n  // 紙吹雪を出す回数をセットする\n  const count = useRef(CONFETTI_COUNT);\n\n  // 紙吹雪を出す関数\n  const myConfetti = confetti.create(myCanvas.current!, {\n    resize: true,\n    useWorker: true\n  });\n\n  React.useEffect(() => {\n    // canvasが取得できたら、紙吹雪を出し始める\n    if (myCanvas.current) {\n      const cb = () => {\n        myConfetti({\n          particleCount: 100,\n          spread: 100,\n          ticks: 1000,\n          origin: {\n            x: Math.random(),\n            y: 0\n          }\n        });\n\n        count.current--;\n\n        if (count.current === 0) {\n          return;\n        } else {\n          setTimeout(cb, 1000);\n        }\n      };\n\n      window.setTimeout(cb, 1000);\n    }\n  }, [myCanvas]);\n\n  return (\n    <React.Fragment>\n      <ButtonAppBar />\n      <BoxComponent result={numbers} />\n      <OutlinedButtons />\n      <canvas ref={myCanvas} />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { useHash } from \"./hooks/useHash\";\nimport { App } from \"./pages/App\";\nimport Game from \"./pages/Game\";\nimport { Play } from \"./pages/Play\";\nimport { Result } from \"./pages/Result\";\n\nexport const RouterConfig: React.VFC = () => {\n  const hash = useHash(window.location.hash);\n\n  switch (hash) {\n    case \"\":\n      return <App />;\n    case \"#\":\n      return <App />;\n    case \"#result\":\n      return <Result />;\n    case \"#play\":\n      return <Play />;\n    case \"#game\":\n      return <Game />;\n    default:\n      return <h1>Not found!</h1>;\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useHash = (init: string) => {\n  const [hash, setHash] = useState(init);\n\n  useEffect(() => {\n    const cb = () => {\n      setHash(window.location.hash);\n    };\n\n    window.addEventListener(\"hashchange\", cb);\n\n    return () => window.removeEventListener(\"hashChange\", cb);\n  }, []);\n\n  return hash;\n};\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RouterConfig } from \"./RouterConfig\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RouterConfig />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}